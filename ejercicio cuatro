//BR15014_AG_2018
//Ejercicio 4
#include <GL/gl.h>  // Librerias a utilizar
#include <GL/glut.h>
#include <math.h>
void display(void)
{
    glClear(GL_COLOR_BUFFER_BIT);
    glPointSize(5);//Tama√±o de los puntos
    glBegin(GL_LINES);//Primitiva, lineas
    // Aplicando la formula del metodo de fourier
    //Declarando las variables que se utilizaran
    double t, k=4, y, i, a =(-3*(M_PI)), b=(5*(M_PI));//Variables a utilizar 
    for (i=a ;i<=b ; i+=(M_PI)){//Limites de la funcion a evaluar.
		t=i;
		y=k+((4*k)/(M_PI))*((sin(t))+((1/3)*sin(3*t))+((1/5)*sin(5*t)));//Evaluacion de la formula 
		glColor3f(1,1,1);//Color de la grafica
		
		glVertex2f(t,y);//Graficacion de las lineas en el eje de las 'Y'
		glVertex2f(t,0);
		glVertex2f(t,y);//Graficacion de las lineas en el  eje de las 'X'
		}
	
    glEnd();
    glFlush ();
    //Para marcar el plano carteciano, los ejes
    glBegin(GL_LINES);
    glColor3f(1.0f,1.0f,1.0f);
    glVertex2f(14,0);
    glVertex2f(-14,0);
    glVertex2f(0,14);
    glVertex2f(0,-14);
    glEnd();
    glFlush ();
    
    

}
void init (void)
{
    glMatrixMode(GL_PROJECTION);//Para iniciar el tipo de matriz
    glLoadIdentity();//Trasnformacion en la matriz
    glOrtho(-15.0,15.0, -15.0, 15.0, -15.0, 15.0);//Ortho mostrardo los  4 cuadrantes.
}

int main(int argc, char** argv)
{
    glutInit(&argc, argv);
    glutInitDisplayMode (GLUT_SINGLE | GLUT_RGB);//Modo de colores, en la pantalla
    glutInitWindowSize (500, 500);//Amplitud de la pantalla a mostrar
    glutInitWindowPosition (250, 100);//Ubicacion de la pantalla dentro del monitor 
    glutCreateWindow ("Metodo de Fourier");//Nomnbre a mostrar del programa 
    init ();
    glutDisplayFunc(display);//Funcion  de devolucion de pantalla
    glutMainLoop();
    return 0;
}
